import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

'''1，创建对象'''
# 1.1 使用传递的值列表序列创建序列, 让pandas创建默认整数索引
s = pd.Series([1,3,5,np.nan,6,8])
# print(s)
# 0    1.0
# 1    3.0
# 2    5.0
# 3    NaN
# 4    6.0
# 5    8.0
# dtype: float64

# 1.2 使用传递的numpy数组创建数据帧,并使用日期索引和标记列.
dates = pd.date_range('20130101',periods=6)
# print(dates)
# DatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',
#                '2013-01-05', '2013-01-06'],
#               dtype='datetime64[ns]', freq='D')
df = pd.DataFrame(np.random.randn(6,4),index=dates,columns=list('ABCD'))
# print(df)
#                    A         B         C         D
# 2013-01-01  1.329457  0.107822  2.338926  3.244382
# 2013-01-02  0.713496  0.302043  1.292043  0.636480
# 2013-01-03 -0.713168  2.393433 -0.291605  0.403200
# 2013-01-04 -0.146484  0.230842 -0.462589  1.028628
# 2013-01-05 -1.052638 -0.161416  0.261323 -2.023400
# 2013-01-06 -0.518567  0.364021 -0.122270  0.960540

# 1.3 使用传递的可转换序列的字典对象创建数据帧.
df2 = pd.DataFrame({ 'A' : 1.,
                      'B' : pd.Timestamp('20130102'),
                     'C' : pd.Series(1,index=list(range(4)),dtype='float32'),
                     'D' : np.array([3] * 4,dtype='int32'),
                     'E' : pd.Categorical(["test","train","test","train"]),
                     'F' : 'foo' })
# print(df2)
#      A          B    C  D      E    F
# 0  1.0 2013-01-02  1.0  3   test  foo
# 1  1.0 2013-01-02  1.0  3  train  foo
# 2  1.0 2013-01-02  1.0  3   test  foo
# 3  1.0 2013-01-02  1.0  3  train  foo
# 所有明确类型
# print(df2.dtypes)
# A           float64
# B    datetime64[ns]
# C           float32
# D             int32
# E          category
# F            object
# dtype: object

'''2，查看数据'''
# 首先贴出df数据
# print(df)
#                    A         B         C         D
# 2013-01-01  1.329457  0.107822  2.338926  3.244382
# 2013-01-02  0.713496  0.302043  1.292043  0.636480
# 2013-01-03 -0.713168  2.393433 -0.291605  0.403200
# 2013-01-04 -0.146484  0.230842 -0.462589  1.028628
# 2013-01-05 -1.052638 -0.161416  0.261323 -2.023400
# 2013-01-06 -0.518567  0.364021 -0.122270  0.960540

#2.1  查看帧顶部和底部行
# print(df.head())
#                    A         B         C         D
# 2013-01-01 -2.609354  0.114800  0.681238 -0.550699
# 2013-01-02  0.324207  0.757938 -0.279716 -0.932926
# 2013-01-03 -0.213621 -0.542263 -0.870220 -0.236441
# 2013-01-04  2.174008 -0.494634 -0.619594 -1.822279
# 2013-01-05 -0.302481  0.041766  1.639024  0.388146
# print(df.tail(3))
#                    A         B         C         D
# 2013-01-04 -1.000799  1.745252 -1.387095 -0.780326
# 2013-01-05  0.671463  0.188640  0.184556  1.406445
# 2013-01-06 -0.770027 -1.431031 -0.216618  0.173021

# 2.2 显示索引,列,和底层numpy数据
# 索引
# print(df.index)
# DatetimeIndex(['2013-01-01', '2013-01-02', '2013-01-03', '2013-01-04',
#                '2013-01-05', '2013-01-06'],
#               dtype='datetime64[ns]', freq='D')
#列
# print(df.columns)
# Index(['A', 'B', 'C', 'D'], dtype='object')
# 底层numpy数据
# print(df.values)
# [[-1.49542436  2.86029169 -0.33026267  1.7630843 ]
#  [-0.95945001  0.41344232  0.85233828 -1.80845724]
#  [-0.93717947  0.73902239 -0.20641443 -0.92797989]
#  [-0.19083408  0.41300553 -0.81050804 -0.23120221]
#  [-0.03484889 -0.49500106  2.52323794 -1.41128806]
#  [-0.63702746  0.36408615  1.1161687   0.19734813]]

# 2.3 描述显示数据快速统计摘要
# print(df.describe())
#               A         B         C         D
# count  6.000000  6.000000  6.000000  6.000000
# mean  -0.245932  0.155703 -0.053792 -0.017371
# std    1.560611  0.733405  0.834128  1.079054
# min   -2.313839 -0.887850 -1.098627 -1.970628
# 25%   -1.484935 -0.186008 -0.757768 -0.245888
# 50%    0.433194  0.048494  0.151061  0.198856
# 75%    0.627707  0.648417  0.560086  0.648146
# max    1.403628  1.140862  0.838037  1.064918

# 2.4 转置数据
# print(df.T)
#    2013-01-01  2013-01-02  2013-01-03  2013-01-04  2013-01-05  2013-01-06
# A   -0.503752    1.331851   -0.201325   -0.539922   -1.567691   -1.242435
# B    0.106169   -0.431661    0.585882    1.059479    1.082922   -0.338262
# C   -0.264532   -0.403358    0.636015    0.056316    0.767521    0.227225
# D    0.027070   -2.704885   -0.047051   -0.139438   -0.855926   -0.859565

#2.5 按轴排序
# print(df.sort_index(axis=1, ascending=False))
#                  D         C         B         A
# 2013-01-01  1.134640  0.107090  1.459110 -0.788411
# 2013-01-02 -0.027286 -0.951879  0.960481  1.280827
# 2013-01-03  0.088344  0.998539  0.252223 -2.299773
# 2013-01-04 -0.248954  0.577159 -0.226045 -1.262856
# 2013-01-05  1.408025  0.424389  0.466388  0.150071
# 2013-01-06  0.095215 -0.693817  1.348497 -1.068592

# print(df.sort_index(axis=1))
#                    A         B         C         D
# 2013-01-01  1.358372 -0.271001 -2.932826 -1.774931
# 2013-01-02  1.461712 -0.243020  0.434857  2.179638
# 2013-01-03  0.805824  0.387919 -2.411811  0.632563
# 2013-01-04  0.674352 -0.621552 -0.164833 -2.094618
# 2013-01-05  1.198035  0.514518 -0.481020 -0.485844
# 2013-01-06 -0.782932 -0.403833  0.329101 -0.301178

#2.6 按值排序
# print(df.sort_values(by="B"))     #这里教程的df.sort(columns='B')版本不对，出现错误
#                    A         B         C         D
# 2013-01-01  1.758497 -2.100135  0.532311 -0.866141
# 2013-01-03  0.030475 -0.227664  0.709844  1.201307
# 2013-01-06 -1.028308  0.186739  0.069377  0.299899
# 2013-01-05 -1.869055  0.316538  0.029970  0.446428
# 2013-01-02  0.068469  0.414596  0.115327 -0.081507
# 2013-01-04 -1.072463  1.909096 -0.089006 -0.770457

'''3,选择器'''
# 3.1   读取
# 3.1.1 选择单列, 这会产生一个序列, 等价df.A
# print(df['A'])
# 2013-01-01    0.888340
# 2013-01-02   -0.080787
# 2013-01-03   -0.738749
# 2013-01-04   -0.767998
# 2013-01-05   -2.076289
# 2013-01-06    0.649669
# Freq: D, Name: A, dtype: float64

# 3.1.2 使用[]选择行片断
# print(df[0:3])
#                    A         B         C         D
# 2013-01-01 -0.267385  0.032750 -0.141679 -1.644073
# 2013-01-02  1.990776  1.120147  0.748941  1.176253
# 2013-01-03  0.971387 -0.681991 -0.170357  0.813922

# print(df['20130102':'20130104'])
#                    A         B         C         D
# 2013-01-02  1.437609  0.813753 -0.112452 -1.140894
# 2013-01-03  0.362030  1.301323  0.253076 -0.655301
# 2013-01-04 -2.104016 -0.055078  2.490221 -1.418134

#3.2 使用标签选择
#3.2.1  使用标签获取横截面
# print(df.loc[dates[0]])
# A    1.054534
# B    0.050521
# C   -0.203066
# D   -0.417903
# Name: 2013-01-01 00:00:00, dtype: float64

# 3.2.2 使用标签选择多轴
# print(df.loc[:,['A','B']])
#                    A         B
# 2013-01-01 -1.428210  0.259666
# 2013-01-02  0.215185  0.729623
# 2013-01-03  0.126937  0.702553
# 2013-01-04  1.437633  1.202443
# 2013-01-05 -0.316812  0.067887
# 2013-01-06 -0.249540  1.191780
